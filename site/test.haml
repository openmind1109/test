title: Hello
--
!!! 5
%html
  %head
    %title jQuery Transit - CSS3 animations for jQuery
    %link(rel='stylesheet' media='screen' type='text/css' href='style.css')
    %meta(name='description' content='Super-smooth CSS3 transformations and transitions for jQuery.')
    != "<!--[if lt IE 9]><script src='//html5shiv.googlecode.com/svn/trunk/html5.js'></script><![endif]-->"
    %script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js')
    %script(src='jquery.transit.min.js')
    %script(src='script.js')
    :javascript
      jQuery.fn.bounceIn = function(callback) {
        return this.
          css({ scale: 0.9, opacity: 0 }).
          transit({ scale: 1.03, opacity: 1 }, 120, 'out').
          transit({ scale: 1.0 }, 200, 'in', callback);
      };

      jQuery.fn.bounceOut = function(callback) {
        return this.
          css({ opacity: 1 }).
          transit({ scale: 0.97, opacity: 0 }, 120, 'in', callback);
      };

  %body
    #all
      %hgroup#header
        %h1
          jQuery Transit tests

      -# ============================================================================
      %h2 Delay zero

      %article.mini
        .hover
        .code
          %h3 Delay zero
          %pre
            != "$('.box').transition({ x: 330, delay: 0 }).transition({ x: 0 });"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      -# ============================================================================
      %h2 Callback tests

      %article.mini
        .hover
        .code
          %h3 2nd param
          %pre
            != "$('.box').transition({ x: 330 }, <b>function() { $(this).html('OK'); }</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 3rd param
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>function() { $(this).html('OK'); }</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 as 'complete'
          %pre
            != "$('.box').transition({ x: 330, complete: <b>function() { $(this).html('OK'); }</b>});"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      -# ============================================================================
      %h2 Property cleanup test

      %article
        .hover
        .code
          %h3 Clean up transformations
          %pre
            != "$('.box')."
            %br<>
            != "    transition({ x: '-200px' }, function() {"
            %br<>
            != "     if ($(this).attr('style').indexOf('transition') > -1)"
            %br<>
            != "        alert('fail');"
            %br<>
            != "});"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      -# ============================================================================
      %h2 Queue reliability

      %article.mini
        .hover
        .code
          %pre
            != "var $el = $('.box');"
            %br<>
            != "$el.css({ transitionOrigin: '50% 0' });"
            %br<>
            != "for (var i=0; i<30; ++i) { $el.transit({ perspective: 100, rotateX: (i%2==0)?40:-40 }, 200); }"
            %br<>
            != "$el.transit({ rotateX: 0 });"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      -# ============================================================================
      %h2 Transitioning from one style to another

      %article
        .hover
        .code
          %h3 Transition with zero duration
          %pre
            != "$('.box')."
            %br<>
            != "    transition({ x: '-200px' }, <b>0</b>)."
            %br<>
            != "    transition({ x: 0 });"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      %article
        .hover
        .code
          %h3 Zero durations - should not flicker (1)
          %pre
            != "$('.box')."
            %br<>
            != "    transition({ x: '-200px' }, <b>0</b>)."
            %br<>
            != "    transition({ x: '-100px' }, <b>0</b>)."
            %br<>
            != "    transition({ x: '40px' }, <b>0</b>)."
            %br<>
            != "    transition({ x: 0 }, <b>0</b>);"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      %article
        .hover
        .code
          %h3 Zero durations with non-zeros - fails in WebKit
          %pre
            != "$('.box')."
            %br<>
            != "    transition({ x: '-200px' }, <b>0</b>)."
            %br<>
            != "    transition({ x: '0' }, <b>200</b>)."
            %br<>
            != "    transition({ y: 10 }, <b>0</b>)."
            %br<>
            != "    transition({ x: 200 }, <b>0</b>)."
            %br<>
            != "    transition({ x: 0 }, <b>200</b>)."
            %br<>
            != "    transition({ y: 0 }, <b>0</b>);"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      %article
        .hover
        .code
          %h3 Zero durations with non-zeros -- baseline
          %pre
            != "$('.box')."
            %br<>
            != "    animate({ left: -200 }, <b>0</b>)."
            %br<>
            != "    animate({ left: 10 }, <b>200</b>)."
            %br<>
            != "    animate({ top: 20 }, <b>0</b>)."
            %br<>
            != "    animate({ left: 200 }, <b>0</b>)."
            %br<>
            != "    animate({ left: 10 }, <b>200</b>)."
            %br<>
            != "    animate({ top: 10 }, <b>0</b>);"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      %article
        .hover
        .code
          %h3 Transition with CSS
          %pre
            != "$('.box')."
            %br<>
            != "    css({ x: '-200px' })."
            %br<>
            != "    transition({ x: 0 });"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      -# ============================================================================
      %h2 Lingering test

      %article
        .hover
        .code
          %h3 Don't animate 'left'
          %pre
            != "$('.box')."
            %br<>
            != "    css({ position: 'absolute', left: '500px', opacity: 0 }, <b>0</b>);"
            %br<>
            != "window.setTimeout(function() {"
            %br<>
            != "    $('.box')."
            %br<>
            != "      css({ left: 10 })."
            %br<>
            != "      transition({ opacity: 1 });"
            %br<>
            != "}, 200);"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 10px; top: 10px; width: 380px; height: 130px;'}

      -# ============================================================================
      %h2 Bounce?

      %article
        .hover
        .code
          %h3 In
          %pre
            != "$('.box').bounceIn();"

        .field
          .box{style: 'left: 180px; top: 20px;'}

      -# ============================================================================
      %h2 Translate (move)

      %article
        .hover
        .code
          %h3 Translate X
          %pre
            != "$('.box').transition({ <b>x: '90px'</b> });"

        .field
          .box{style: 'left: 10px; top: 10px;'}

      %article
        .hover
        .code
          %h3 Translate Y
          %pre
            != "$('.box').transition({ <b>y: '30px'</b> });"

        .field
          .box{style: 'left: 10px; top: 10px;'}

      %article
        .hover
        .code
          %h3 Translate X and Y
          %pre
            != "$('.box').transition({ <b>x: '200px', y: '20px'</b> });"

        .field
          .box{style: 'left: 10px; top: 10px;'}

      -# ============================================================================
      %h2 Rotation

      %article
        .hover
        .code
          %h3 Rotate
          %pre
            != "$('.box').transition({ <b>rotate: '30deg'</b> });"

        .field
          .box{style: 'left: 180px; top: 20px;'}

      -# ============================================================================
      %h2 Skew

      %article
        .hover
        .code
          %h3 Skew X
          %pre
            != "$('.box').transition({ <b>skewX: '30deg'</b> });"
            
        .field
          .box{style: 'left: 180px; top: 20px;'}

      %article
        .hover
        .code
          %h3 Skew Y
          %pre
            != "$('.box').transition({ <b>skewY: '30deg'</b> });"
            
        .field
          .box{style: 'left: 180px; top: 20px;'}

      %article
        .hover
        .code
          %h3 Skew X and Y
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>skewX: '30deg',</b>"
            %br<>
            != "    <b>skewY: '-30deg'</b>"
            %br<>
            != "});"
            
        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Scale

      %article
        .hover
        .code
          %h3 Scale up 120% size
          %pre
            != "$('.box').transition({ <b>scale: 1.2</b> });"
            
        .field
          .box{style: 'left: 180px; top: 20px;'}

      %article
        .hover
        .code
          %h3 Scale 200% horizontally, 150% vertically
          %pre
            != "$('.box').transition({ <b>scale: [2, 1.5]</b> });"
            
        .field
          .box{style: 'left: 180px; top: 25px;'}

      -# ============================================================================
      %h2 3D rotation (Webkit only)

      %article
        .hover
        .code
          %h3 Rotate X
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>perspective: '100px',</b>"
            %br<>
            != "    <b>rotateX: '180deg'</b>"
            %br<>
            != "});"

        .field
          .box{style: 'left: 180px; top: 20px;'}

      %article
        .hover
        .code
          %h3 Rotate Y
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>perspective: '100px',</b>"
            %br<>
            != "    <b>rotateY: '180deg'</b>"
            %br<>
            != "});"

        .field
          .box{style: 'left: 180px; top: 20px;'}

      %article
        .hover
        .code
          %h3 Rotate 3D
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>perspective: '100px',</b>"
            %br<>
            != "    <b>rotate3d: '1, 1, 0, 180deg'</b>"
            %br<>
            != "});"

        .field
          .box{style: 'left: 180px; top: 20px;'}

      -# ============================================================================
      %h2 Transitions for other properties

      %article
        .hover
        .code
          %h3 $.fn.transition for any CSS property
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>opacity: 0,</b>"
            %br<>
            != "    scale: 1.6"
            %br<>
            != "});"
            
        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      %article
        .hover
        .code
          %pre
            != "$('.box').transition({"
            %br<>
            != "    <b>marginLeft: '20px',</b>"
            %br<>
            != "    <b>height: '80px'</b>"
            %br<>
            != "});"
            
        .field{style: 'height: 130px'}
          .box{style: 'left: 180px; top: 35px;'}

      -# ============================================================================
      %h2 Callbacks

      %article
        .hover
        .code
          %h3 Providing callbacks
          %pre
            != "$('.box').transition({ x: -100 }, <b>function() {</b>"
            %br<>
            != "<b>    $(this).transition({ opacity: 0 });</b>"
            %br<>
            != "<b>}</b>);"
            
        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Custom duration

      %article
        .hover
        .code
          %h3 Custom duration (jQuery style)
          %pre
            != "$('.box').transition({ opacity: 0 }, <b>'slow'</b>);"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      %article
        .hover
        .code
          %h3 Custom duration (in milliseconds)
          %pre
            != "$('.box').transition({ opacity: 0 }, <b>2000</b>);"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Easing

      %article.mini
        .hover
        .code
          %h3 Linear
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'linear'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 Ease in
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'in'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 Ease
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'ease'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 Ease out
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'out'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 Ease in-out
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'in-out'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini
        .hover
        .code
          %h3 Snap
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'snap'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      %article.mini.last
        .hover
        .code
          %h3 Custom
          %pre
            != "$('.box').transition({ x: 330 }, 500, <b>'cubic-bezier(0,0.9,0.3,1)'</b>);"

        .field{style: 'height: 53px'}
          .box{style: 'left: 10px; top: 10px; height: 30px;'}

      -# ============================================================================
      %h2 Delay

      %article
        .hover
        .code
          %h3 Delay by 400ms
          %pre
            != "$('.box').transition({ x: -100, <b>delay: 400</b> });"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Alternate easing/duration syntax

      %article
        .hover
        .code
          %pre
            != "$('.box').transition({"
            %br<>
            != "    x: '100px',"
            %br<>
            != "    <b>easing: 'snap',</b>"
            %br<>
            != "    <b>duration: '2000ms'</b>"
            %br<>
            != "});"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Optional units

      %article
        .hover
        .code
          %pre
            != "$('.box').transition({"
            %br<>
            != "    x: <b>100</b>,"
            %br<>
            != "    duration: <b>2000</b>,"
            %br<>
            != "    rotate: <b>30</b>,"
            %br<>
            != "    easing: 'snap'"
            %br<>
            != "});"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}

      -# ============================================================================
      %h2 Relative units

      %article
        .hover
        .code
          %pre
            != "$('.box').transition({"
            %br<>
            != "    rotate: <b>'+=30deg'</b>,"
            %br<>
            != "    x: <b>'+=30'</b>"
            %br<>
            != "});"

        .field{style: 'height: 150px'}
          .box{style: 'left: 180px; top: 45px;'}


      -# ============================================================================
      %h2 $.fn.css

      %article
        .hover
        .code
          %pre
            != "$('.box').<b>css({</b>"
            %br<>
            != "    <b>x: '90px'</b>,"
            %br<>
            != "    <b>y: '10px'</b>,"
            %br<>
            != "    <b>rotate: '-10deg'</b>"
            %br<>
            != "<b>}</b>)</b>;"

        .field{style: 'height: 150px'}
          .box{style: 'left: 10px; top: 10px'}

      %article
        .hover
        .code
          %h3 Transform (automatically adds vendor prefixes)
          %pre
            != "$('.box').css({ <b>transform: 'rotate(40deg)'</b> });"

        .field
          .box{style: 'left: 10px; top: 10px;'}

      %article
        .code
          %h3 Getting values
          %pre
            != "$('.box').css({ rotate: '40deg' });"
            %br<>
            != "alert($('.box').<b>css('rotate')</b>);"
            %br<>
            != "alert($('.box').<b>css('transform')</b>);"
          %button Run

        .field{style: 'height: 150px'}
          .box{style: 'left: 10px; top: 10px;'}

      -# ============================================================================
      %h2 Setting transform origins

      %article
        .hover
        .code
          %pre
            != "$('.box').css({ <b>transformOrigin: '10px 10px'</b> });"
            %br<>
            != "$('.box').transition({ rotate: 40, scale: 1.2 });"

        .field
          .box{style: 'left: 10px; top: 10px;'}

      -# ============================================================================
      %h2 Effect queue

      %article
        .hover
        .code
          %pre
            != "$('.box')."
            %br<>
            != "    transition({ x: '-40px' }, 250)."
            %br<>
            != "    transition({ x: '0px' }, 250)."
            %br<>
            != "    transition({ y: '-40px' }, 250)."
            %br<>
            != "    transition({ y: '0px' }, 250);"

        .field{style: 'height: 150px; overflow: hidden;'}
          .box{style: 'left: 180px; top: 45px;'}

  :javascript
    // Super simple test framework.
    var T = {
      test: null,
      alerted: false,

      run: function(tests) {
        var self = this;

        for (test in tests) {
          if (tests.hasOwnProperty(test)) {
            if (test.charAt(0) == '_') continue;
            var fn    = tests[test];
            var obj   = {};
            if (tests._setup) tests._setup.apply(obj);
            fn.apply(obj, [ function(val) { self.assert(val, test, this); } ]);
          }
        }
      },

      assert: function(value, test, T) {
        if (!value) {
          console.error(test, "- Assertion failed.");
          console.trace();
          if (!T.alerted) alert("An assertion failed. See the console for details.");
        }
      }
    };

    function getTransition(el) {
      return el.style[$.support.transition];
    }

    function uncamel(str) {
      return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); })
    }

    // Tests yo
    T.run({
      _setup: function() {
        this.div = $("<div>");
      },

      get_rotate: function(a) {
        a(this.div.css('rotate') == 0);
      },

      set_and_get_rotate: function(a) {
        this.div.css('rotate', 30);
        a(this.div.css('rotate') == '30deg');
      },

      set_and_get_rotate_radian: function(a) {
        this.div.css('rotate', '30rad');
        a(this.div.css('rotate') == '30rad');
      },

      translate: function(a) {
        this.div.css('x', 30);
        this.div.css('y', 40);

        a(this.div.css('x') == '30px');
        a(this.div.css('y') == '40px');
        a(this.div.css('translate') == ['30px','40px']);
      },

      array_args: function(a) {
        this.div.css('translate', [300, 400]);
        a(this.div.css('translate') == ['300px','400px']);
      },

      array_args_2: function(a) {
        this.div.css('translate', ['300', '400']);
        a(this.div.css('translate') == ['300px','400px']);
      },

      array_args_3: function(a) {
        this.div.css('translate', ['300em', '400em']);
        a(this.div.css('translate') == ['300em','400em']);
      },

      scale_1: function(a) {
        this.div.css('scale', [2,3]);
        var s = this.div.css('scale');

        a(s.length == 2);
        a(s[0] == 2);
        a(s[1] == 3);
      },

      scale_2: function(a) {
        this.div.css('scale', [2.5, 2.5]);
        a(this.div.css('scale') == 2.5);
      },

      transform_object: function(a) {
        this.div.css('x', '40px');
        this.div.css('y', '90px');
        this.div.css('rotate', 400);

        var t = this.div.css('transform');
        a(t.toString() == 'translate(40px,90px) rotate(400deg)');
        a(t.toString(true) == 'translate3d(40px,90px,0) rotate(400deg)');
        a(t.rotate === '400deg');
        a(t.translate === '40px,90px');
      },

      callback: function(a) {
        var div = $("<div>").appendTo($("body"));
        var x = 1;
        div.transition({ x: -40 }, 400, function() {
          x = 2;
        });

        window.setTimeout(function() {
          a(x == 2);
        }, 1600);
      },

      transition_property: function(a) {
        var div = $("<div>").appendTo($("body"));
        div.transition({ left: 40, marginLeft: 10, rotate: 30 }, 400, 'ease');
        window.setTimeout(function() {
          var t = getTransition(div[0]);
          a(t.indexOf('left 400ms ease') > -1);
          a(t.indexOf('margin 400ms ease') > -1);
          a(t.indexOf(uncamel($.support.transform) + ' 400ms ease') > -1);
        }, 200);
      },

      get_transition_value: function(a) {
        var t = $.transit.getTransitionValue({ opacity: 0, skewX: 30 }, 500, 'in');
        a(t.indexOf('opacity 500ms ease-in') > -1);
        a(t.indexOf(uncamel($.support.transform) + ' 500ms ease-in') > -1);
      }

    });
